<%

var slug = env.slug;
var locale = env.locale;
var hasTag = page.hasTag;
var escapeQuotes = mdn.escapeQuotes;
var htmlEscape = kuma.htmlEscape;
var rtlLocales = ['ar', 'he', 'fa'];

var badges = {
  ExperimentalBadge : '<span class="sidebar-icon">' + template("ExperimentalBadge", [1]) + '</span>',
  NonStandardBadge  : '<span class="sidebar-icon">' + template("NonStandardBadge", [1]) + '</span>',
  DeprecatedBadge   : '<span class="sidebar-icon">' + template("DeprecatedBadge", [1]) + '</span>',
  ObsoleteBadge     : '<span class="sidebar-icon">' + template("ObsoleteBadge", [1]) + '</span>',
}

function buildSublist(pages, title, ignoreBadges) {
  var result = '<li data-default-state="open"><a href="#"><strong>' + title + '</strong></a><ol>';

  for (var i in pages) {
    var aPage = pages[i];
    var summary = escapeQuotes(aPage.summary) || '';
    var url = aPage.url.replace('en-US', locale);
    var title = htmlEscape(aPage.title);

    var apiComponentName = title;
    var titlePieces = title.split(".");
    if (titlePieces.length > 1) {
      apiComponentName = titlePieces[1];
    }

    
    var translated = false;
    if (locale != 'en-US') {
        aPage.translations.forEach(function(translation) {
            if(translation.locale === locale) {
                summary = escapeQuotes(translation.summary) || '';
                url = translation.url;
                title = htmlEscape(translation.title);
                translated = true;
            }
        });
    }
    
    var cta = '';
     if (!translated && locale != 'en-US') {
        cta += ' <a href="'+ url +'$translate" style="opacity:0.5" title="'+ text['title'] + '">' + text['translate'] + '</a>';
    }
    
    
    result += '<li>';
    
    if (!ignoreBadges) {
    
        if (hasTag(aPage, 'Experimental')) {
            result += badges.ExperimentalBadge;
        }

        if (hasTag(aPage, 'Non-standard') || hasTag(aPage, 'Non Standard')) {
            result += badges.NonStandardBadge;
        }

        if (hasTag(aPage, 'Deprecated')) {
            result += badges.DeprecatedBadge;
        }

        if (hasTag(aPage, 'Obsolete')) {
            result += badges.ObsoleteBadge;
            result += '<s class="obsoleteElement">';
        }
    }
    
    if (rtlLocales.indexOf(locale) != -1) {
        result += '<bdi>';
    }
    
    if (slug == aPage.slug) {
        result += '<em><code>' + apiComponentName + '</code></em>'
    } else {
        result += '<a href="' + url + '" title="' + summary + '"><code>' + apiComponentName + '</code></a>' + cta;
    }
    
    if (rtlLocales.indexOf(locale) != -1) {
        result += '</bdi>';
    }
    
    if (hasTag(aPage, 'Obsolete')) {
        result += '</s>';
    }
    
    result += '</li>';
  }

  result += '</ol></li>';

  return result;
}


module.exports = {
  buildSublist: buildSublist
}
%>
