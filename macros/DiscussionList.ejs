<%
// Outputs a list of discussion channels available for a topic.
//
// Parameters:
//
//  $0  The mailing list name
//  $1  The newsgroup name (optional)
//  $2  The class name to use for the list (null if none)
//  $3  Name of the topic/community (was $0 in CommunityBox template)
//  $4  Twitter ID (null if none)
//  $5  Stack Overflow tag (null if none)

var lang = env.locale; /* get the page language */ ; 
var mailingList, newsgroup, googleGroup, webFeed, stackOverflow, twitter;

/* Translation Targets
    * " mailingList"
	* " newsgroup"
	* " googleGroup"
	* " webFeed"
    * " stackOverflow"
    * " twitter"
*/
switch(lang) {
	case 'ca':
		mailingList = " com una llista de correu";
		newsgroup = " com un grup de discussió";
		googleGroup = " com un grup de Google";
		webFeed = " com un canal web";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'cs':
		mailingList = " e-mailovou konferenci";
		newsgroup = " diskuzní skupinu";
		googleGroup = " Google Group";
		webFeed = " RSS kanál";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'de':
		mailingList = "Mailing-Liste";
		newsgroup = "Newsgroup";
		googleGroup = "Google Group";
		webFeed = "Web-Feed";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'es':
		mailingList = " como lista de correo";
		newsgroup = " como grupo de noticias";
		googleGroup = " como grupo de Google";
		webFeed = " como RSS";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'fi':
		mailingList = " sähköposti listana";
		newsgroup = " uutisryhmänä";
		googleGroup = " Google Rymänä";
		webFeed = " RSS kanál";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'fr':
		mailingList = " Liste de diffusion";
		newsgroup = " 		newsgroup";
		googleGroup = " Groupe Google";
		webFeed = " Flux de syndication";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'it':
		mailingList = " Mailing list";
		newsgroup = " Newsgroup";
		googleGroup = " Google Groups";
		webFeed = " Feed RSS";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'ja':
		mailingList = " メーリングリストとして";
		newsgroup = " ニュースグループとして";
		googleGroup = " Google Group として";
		webFeed = " フィードとして";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'ko':
		mailingList = " 메일링 리스트";
		newsgroup = " 뉴스그룹";
		googleGroup = " Google 그룹";
		webFeed = " 웹 Feed";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'pl':
		mailingList = " jako listę dyskusyjna";
		newsgroup = " jako 		newsgroup";
		googleGroup = " jako grupę Google";
		webFeed = " jako kanał";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
    case 'ru':
    	mailingList = " Почтовая рассылка";
		newsgroup = " newsgroup";
		googleGroup = " Группы Google";
		webFeed = " Новостная лента";
        stackOverflow = " Stack Overflow";
        twitter = " Твиттер";
		break;
	case 'zh-CN':
		mailingList = " 邮件列表";
		newsgroup = " 新闻组";
		googleGroup = " Google Group（中文）";
		webFeed = " Web feed";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	case 'zh-TW':
		mailingList = " 郵件討論";
		newsgroup = " 新聞群組";
		googleGroup = " Google 群組";
		webFeed = " feed 消息來源";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
	default:
		mailingList = "Mailing list";
		newsgroup = "Newsgroup";
		googleGroup = "Google Group";
		webFeed = "RSS feed";
        stackOverflow = " Stack Overflow";
        twitter = " Twitter";
		break;
}

// Build the Stack Overflow URL using the SO tag

var stackOverflowURL = null;
var soHTML = "";

if ($5) {
    stackOverflowURL = "http://stackoverflow.com/questions/tagged/" + $5;
    soHTML = "<li>" + web.link(stackOverflowURL, stackOverflow) + "</li>";
}

// Build the Twitter link (if any)

var twitterURL = null;
var twitHTML = "";

if ($4) {
    twitterURL = "https://twitter.com/" + $4;
    twitHTML = "<li>" + web.link(twitterURL, twitter) + "</li>";
}

// Build the newsgroup and feed links, if newsgroup is given in $1

var newsgroupHTML = "";
var newsgroupFeedHTML = "";

if ($1) {
    newsgroupHTML = "<li>" + web.link('http://groups.google.com/group/' + $1, googleGroup) + "</li>";
    newsgroupFeedHTML = "<li>" + web.link('http://groups.google.com/group/' + $1 + '/feeds', webFeed) + "</li>";
}

// Build the <ul> element

var listElem = "<ul";

if ($2) {
    listElem += " class='" + $2 + "'";
}

listElem += ">"; //Final ">" of the open <ul> tag

// If the parameter looks like a complete URL, just return it.
// Otherwise, prepend it with "https://lists.mozilla.org/listinfo/".

function makeListTarget(param) {

    function startsWith (string, prefix) {
        return string.slice(0, prefix.length) == prefix;
    }

    if (startsWith(param, 'https://') || startsWith(param, 'http://')) {
        return param;
    }
    return  'https://lists.mozilla.org/listinfo/' + param;
}

%>

<%-listElem %>
  <li><%- web.link(makeListTarget($0), mailingList) %></li>
  <%- twitHTML %>
  <%- soHTML %>
  <%- newsgroupHTML %>
  <%- newsgroupFeedHTML %>
</ul>
