<%
/*

Retrieves MDN compat data for a given feature

Parameters

$0 – A query string indicating for which feature to retrieve compat data for.
$1 – A depth setting indicating how deep sub features should be added to the table
(flattened, default: 1, first level of sub feature data will be included).

Example calls

{{compat("webextensions.api.alarms")}}
{{compat("webextensions.api.alarms.Alarm")}}
{{compat("webextensions.manifest")}}
{{compat("webextensions.manifest.applications")}}
{{compat("css.properties.background-attachment")}}
{{compat("css.selectors.any-link")}}
{{compat("css.at-rules.font-face")}}
{{compat("http.headers.Cache-Control")}}
{{compat("http.status.404")}}
{{compat("http.method.CONNECT")}}
{{compat("api.WebGL2RenderingContext")}}
{{compat("api.WebGL2RenderingContext.beginQuery")}}
{{compat("html.elements.input")}}

{{compat("html.elements.link", 2)}}
{{compat("webextensions.api.alarms", 3)}}

*/

const bcd = require('mdn-browser-compat-data');
const {mdnFeatureTable} = require('mdn-browser-compat-toolkit/src/renderers');

var query = $0;
var depth = $1 || 1;
var output = '';

/*
Get compat data using a query string like "webextensions.api.alarms"
*/
function getData(queryString, obj) {
  return queryString.split('.').reduce(function(prev, curr) {
    return prev ? prev[curr] : {};
  }, obj);
}

output = mdnFeatureTable(getData(query, bcd), {query, depth, forMDNURL: 'https://developer.mozilla.org/docs/' + env.slug});
%>
<%-output%>
