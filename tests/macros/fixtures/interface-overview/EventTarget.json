[
    {
        "json_modified": "2019-01-23T02:10:11.301461",
        "subpages": [],
        "tags": [
            "DOM",
            "Constructor",
            "API",
            "EventTarget",
            "DOM Events"
        ],
        "locale": "en-US",
        "translations": [],
        "summary": "The <code><strong>EventTarget()</strong></code> constructor creates a new <a href=\"/en-US/docs/Web/API/EventTarget\" title=\"EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\"><code>EventTarget</code></a> object instance.",
        "id": 226550,
        "review_tags": [],
        "slug": "Web/API/EventTarget/EventTarget",
        "uuid": "13f7d1ae-3268-41f9-9b35-2263740bc640",
        "title": "EventTarget()",
        "url": "/en-US/docs/Web/API/EventTarget/EventTarget",
        "modified": "2019-01-16T21:27:50.018748",
        "label": "EventTarget()",
        "localization_tags": [],
        "last_edit": "2018-08-24T09:52:54.892865",
        "sections": [
            {
                "id": "Quick_Links",
                "title": null
            },
            {
                "id": "Syntax",
                "title": "Syntax"
            },
            {
                "id": "Parameters",
                "title": "Parameters"
            },
            {
                "id": "Return_value",
                "title": "Return value"
            },
            {
                "id": "Examples",
                "title": "Examples"
            },
            {
                "id": "Specifications",
                "title": "Specifications"
            },
            {
                "id": "Browser_compatibility",
                "title": "Browser compatibility"
            },
            {
                "id": "sect1",
                "title": null
            },
            {
                "id": "Legend",
                "title": "Legend"
            },
            {
                "id": "See_also",
                "title": "See also"
            }
        ]
    },
    {
        "json_modified": "2019-02-07T02:11:03.763054",
        "subpages": [],
        "tags": [
            "EventTarget",
            "API",
            "DOM",
            "Reference",
            "Method",
            "JavaScript",
            "events",
            "Detecting Events",
            "addEventListener",
            "Event Listener",
            "Event Handlers",
            "Receiving Events",
            "attachEvent",
            "mselementresize"
        ],
        "locale": "en-US",
        "translations": [],
        "summary": "The <a href=\"/en-US/docs/Web/API/EventTarget\" title=\"EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\"><code>EventTarget</code></a> method <code><strong>addEventListener()</strong></code> sets up a function that will beÂ called whenever the specified event is delivered to the target.",
        "id": 2037,
        "review_tags": [
            "technical"
        ],
        "slug": "Web/API/EventTarget/addEventListener",
        "uuid": "0585c253-ede1-4ef4-a66e-205a3459821a",
        "title": "EventTarget.addEventListener()",
        "url": "/en-US/docs/Web/API/EventTarget/addEventListener",
        "modified": "2019-02-07T02:11:01.245641",
        "label": "EventTarget.addEventListener()",
        "localization_tags": [],
        "last_edit": "2019-02-01T08:28:05.791936",
        "sections": [
            {
                "id": "Quick_Links",
                "title": null
            },
            {
                "id": "Syntax",
                "title": "Syntax"
            },
            {
                "id": "Parameters",
                "title": "Parameters"
            },
            {
                "id": "Return_value",
                "title": "Return value"
            },
            {
                "id": "Usage_notes",
                "title": "Usage notes"
            },
            {
                "id": "The_event_listener_callback",
                "title": "The event listener callback"
            },
            {
                "id": "Safely_detecting_option_support",
                "title": "Safely detecting option support"
            },
            {
                "id": "Examples",
                "title": "Examples"
            },
            {
                "id": "Add_a_simple_listener",
                "title": "Add a simple listener"
            },
            {
                "id": "HTML",
                "title": "HTML"
            },
            {
                "id": "JavaScript",
                "title": "JavaScript"
            },
            {
                "id": "Result",
                "title": "Result"
            },
            {
                "id": "Event_listener_with_anonymous_function",
                "title": "Event listener with anonymous function"
            },
            {
                "id": "HTML_2",
                "title": "HTML"
            },
            {
                "id": "JavaScript_2",
                "title": "JavaScript"
            },
            {
                "id": "Result_2",
                "title": "Result"
            },
            {
                "id": "Event_listener_with_an_arrow_function",
                "title": "Event listener with an arrow function"
            },
            {
                "id": "HTML_3",
                "title": "HTML"
            },
            {
                "id": "JavaScript_3",
                "title": "JavaScript"
            },
            {
                "id": "Result_3",
                "title": "Result"
            },
            {
                "id": "Example_of_options_usage",
                "title": "Example of options usage"
            },
            {
                "id": "HTML_4",
                "title": "HTML"
            },
            {
                "id": "CSS",
                "title": "CSS"
            },
            {
                "id": "JavaScript_4",
                "title": "JavaScript"
            },
            {
                "id": "Result_4",
                "title": "Result"
            },
            {
                "id": "Other_notes",
                "title": "Other notes"
            },
            {
                "id": "Why_use_addEventListener",
                "title": "Why use "
            },
            {
                "id": "Adding_a_listener_during_event_dispatch",
                "title": "Adding a listener during event dispatch"
            },
            {
                "id": "Multiple_identical_event_listeners",
                "title": "Multiple identical event listeners"
            },
            {
                "id": "The_value_of_this_within_the_handler",
                "title": "The value of "
            },
            {
                "id": "Specifying_this_using_bind()",
                "title": "Specifying "
            },
            {
                "id": "Legacy_Internet_Explorer_and_attachEvent",
                "title": "Legacy Internet Explorer and attachEvent"
            },
            {
                "id": "Compatibility",
                "title": "Compatibility"
            },
            {
                "id": "Older_way_to_register_event_listeners",
                "title": "Older way to register event listeners"
            },
            {
                "id": "Memory_issues",
                "title": "Memory issues"
            },
            {
                "id": "Improving_scrolling_performance_with_passive_listeners",
                "title": "Improving scrolling performance with passive listeners"
            },
            {
                "id": "Specifications",
                "title": "Specifications"
            },
            {
                "id": "Browser_compatibility",
                "title": "Browser compatibility"
            },
            {
                "id": "sect1",
                "title": null
            },
            {
                "id": "sect2",
                "title": null
            },
            {
                "id": "sect3",
                "title": null
            },
            {
                "id": "sect4",
                "title": null
            },
            {
                "id": "sect5",
                "title": null
            },
            {
                "id": "Legend",
                "title": "Legend"
            },
            {
                "id": "See_also",
                "title": "See also"
            }
        ]
    },
    {
        "json_modified": "2019-01-16T17:59:06.851785",
        "subpages": [],
        "tags": [],
        "locale": "en-US",
        "translations": [],
        "summary": "",
        "id": 160827,
        "review_tags": [],
        "slug": "Web/API/EventTarget/EventTarget.attachEvent()",
        "uuid": "ace4d361-10af-4a9a-9108-38db2eba4f73",
        "title": "EventTarget.attachEvent()",
        "url": "/en-US/docs/Web/API/EventTarget/EventTarget.attachEvent()",
        "modified": "2019-01-16T17:58:58.872742",
        "label": "EventTarget.attachEvent()",
        "localization_tags": [],
        "last_edit": "2018-12-20T06:15:18.488582",
        "sections": [
            {
                "id": "Quick_Links",
                "title": null
            }
        ]
    },
    {
        "json_modified": "2019-01-27T22:13:28.607854",
        "subpages": [],
        "tags": [
            "API",
            "DOM Element Methods",
            "DOM",
            "Gecko",
            "Method"
        ],
        "locale": "en-US",
        "translations": [],
        "summary": "Dispatches an <a href=\"/en-US/docs/Web/API/Event\" title='The Event interface represents an event which takes place in the DOM; some are user-generated (such as mouse or keyboard events), while others are generated by APIs (such as events that indicate an animation has finished running, a video has been paused, and so forth). While events are usually triggered by such \"external\" sources,Â they can also be triggered programmatically, such as by calling the HTMLElement.click()Â method of anÂ element, or by definingÂ theÂ event, then sendingÂ it to a specified targetÂ using EventTarget.dispatchEvent(). There are many types of events, some of which use other interfaces based on the main Event interface. Event itself contains the properties and methods which are common to all events.'><code>Event</code></a> at the specified <a href=\"/en-US/docs/Web/API/EventTarget\" title=\"EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\"><code>EventTarget</code></a>, (synchronously) invoking the affected <a href=\"/en-US/docs/Web/API/EventListener\" title=\"The EventListener interface represents an object that can handle an event dispatched by an EventTarget object.\"><code>EventListener</code></a>s in the appropriate order. The normal event processing rules (including the capturing and optional bubbling phase) also apply to events dispatched manually with <code>dispatchEvent()</code>.",
        "id": 7014,
        "review_tags": [],
        "slug": "Web/API/EventTarget/dispatchEvent",
        "uuid": "c15bc084-ef1e-4afa-9c90-b1ddb0ca77c9",
        "title": "EventTarget.dispatchEvent()",
        "url": "/en-US/docs/Web/API/EventTarget/dispatchEvent",
        "modified": "2019-01-16T09:01:51.176191",
        "label": "EventTarget.dispatchEvent()",
        "localization_tags": [],
        "last_edit": "2018-12-20T06:13:43.670352",
        "sections": [
            {
                "id": "Quick_Links",
                "title": null
            },
            {
                "id": "Syntax",
                "title": "Syntax"
            },
            {
                "id": "Parameter",
                "title": "Parameter"
            },
            {
                "id": "Return_Value",
                "title": "Return Value"
            },
            {
                "id": "Notes",
                "title": "Notes"
            },
            {
                "id": "Example",
                "title": "Example"
            },
            {
                "id": "Specification",
                "title": "Specifications"
            },
            {
                "id": "Browser_Compatibility",
                "title": "Browser compatibility"
            },
            {
                "id": "sect1",
                "title": null
            },
            {
                "id": "sect2",
                "title": null
            },
            {
                "id": "Legend",
                "title": "Legend"
            }
        ]
    },
    {
        "json_modified": "2019-02-07T02:09:09.449110",
        "subpages": [],
        "tags": [
            "Reference",
            "API",
            "DOM Element Methods",
            "browser compatibility",
            "DOM",
            "Gecko",
            "Method",
            "EventTarget",
            "removeEventListener"
        ],
        "locale": "en-US",
        "translations": [],
        "summary": "The <strong><code>EventTarget.removeEventListener()</code></strong> method removes from theÂ <a href=\"/en-US/docs/Web/API/EventTarget\" title=\"EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them.\"><code>EventTarget</code></a> an event listener previously registered with <a href=\"/en-US/docs/Web/API/EventTarget/addEventListener\" title=\"The EventTarget method addEventListener() sets up a function that will beÂ called whenever the specified event is delivered to the target.\"><code>EventTarget.addEventListener()</code></a>. The event listener to be removed is identified using a combination of the event type, the event listener function itself, and various optional options that may affect the matching process; see <a href=\"#Matching_event_listeners_for_removal\">Matching event listeners for removal</a>",
        "id": 4666,
        "review_tags": [
            "technical"
        ],
        "slug": "Web/API/EventTarget/removeEventListener",
        "uuid": "4aabcfae-ea69-4740-9695-485b64722fa6",
        "title": "EventTarget.removeEventListener()",
        "url": "/en-US/docs/Web/API/EventTarget/removeEventListener",
        "modified": "2019-01-28T07:58:48.014134",
        "label": "EventTarget.removeEventListener()",
        "localization_tags": [],
        "last_edit": "2019-01-28T07:58:46.441245",
        "sections": [
            {
                "id": "Quick_Links",
                "title": null
            },
            {
                "id": "Syntax",
                "title": "Syntax"
            },
            {
                "id": "Parameters",
                "title": "Parameters"
            },
            {
                "id": "Return_value",
                "title": "Return value"
            },
            {
                "id": "Matching_event_listeners_for_removal",
                "title": "Matching event listeners for removal"
            },
            {
                "id": "Notes",
                "title": "Notes"
            },
            {
                "id": "Example",
                "title": "Example"
            },
            {
                "id": "Specifications",
                "title": "Specifications"
            },
            {
                "id": "Browser_compatibility",
                "title": "Browser compatibility"
            },
            {
                "id": "sect1",
                "title": null
            },
            {
                "id": "sect2",
                "title": null
            },
            {
                "id": "Legend",
                "title": "Legend"
            },
            {
                "id": "Polyfill_to_support_older_browsers",
                "title": "Polyfill to support older browsers"
            },
            {
                "id": "See_also",
                "title": "See also"
            }
        ]
    }
]